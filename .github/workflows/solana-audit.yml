name: 'Audit Solana Contracts :)'

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  setup:
    name: Run Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 # This step checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Setup a Python 3.x environment to run your script

      - name: Monorepo install
        run: yarn install
  
      - name: Install dependencies
        working-directory: ./.github/scripts
        run: |
          python -m pip install --upgrade pip # (Optional) Upgrade pip
          pip install -r requirements.txt 
          # Install any dependencies here, if your script requires any.

      - name: Comment on PR  
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const execSync = require("child_process").execSync;
            const raw = execSync("python ./.github/scripts/test.py", { encoding: "utf-8" });
            
            const data = JSON.parse(raw).map(line => ({
              ...line,
              severity: line.severity === "HIGH" ? "High 🥵" : line.severity === "MEDIUM" ? "Medium 🤷🏻‍♂️" : "Low 😗",
            }));
            
            const table = ["| Severity 🌡️  | Message 💭 | Error Code 😬 | Filename 📜 | Lines #️⃣ |"];
            table.push("| :-------------: | ------------- | :-------------: | ------------- | :-------------: |");
            
            if (data.length !== 0) {
              data.forEach(line => {
                table.push(
                  `| ${line.severity} | ${line.message} | \`${line.errorCode}\` | \`${line.filename}\` | \`${
                    line.lines.join(", ")
                  }\` |`,
                );
              });
            }
            
            let body = `## Solanaizer Audit Results 🤖\n\nFind below all the vulnerabilities found in your smart contracts:\n\n${table.join("\n")})}`

            if (data.length !== 0) {
              body += '\n<img src="https://media0.giphy.com/media/Xyj49ooQtsFD16z27J/giphy.gif"/>'
            } else {
              body += '0 vulnerabilities found!\n\n<img src="https://media0.giphy.com/media/Ogak8XuKHLs6PYcqlp/giphy.gif"/>'
            }

            console.table(data);

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });
          