name: 'Audit Solana Contracts :)'

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  setup:
    name: Run Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 # This step checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Setup a Python 3.x environment to run your script

      - name: Install dependencies
        working-directory: ./.github/scripts
        run: |
          python -m pip install --upgrade pip # (Optional) Upgrade pip
          pip install -r requirements.txt 
          # Install any dependencies here, if your script requires any.

      - name: Comment on PR  
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const execSync = require('child_process').execSync;
            const body = execSync('python ./.github/scripts/test.py', { encoding: 'utf-8' });

            const data = JSON.parse(body).map(line => ({...line, severity: line.severity === 'HIGH' ? 'High 🥵' : line.severity === 'MEDIUM' ? 'Medium 🤷🏻‍♂️' : 'Low 😗'}));

            const table = ['| Severity 🌡️  | Message 💭 | Error Code 😬 | Lines #️⃣ |']
            table.push('| :-------------: | ------------- | :-------------: | :-------------: |')

            Jdata.forEach(line => {
              table.push(`| ${line.severity} | ${line.message} | `${line.errorCode}` | `${line.lines.join(', ')}` |`)
            })

            console.table(data);

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Solanaizer Audit Results 😜\n\n${table.join('\n')})}`
            })